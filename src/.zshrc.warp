# Warp-Optimized .zshrc Configuration
# Streamlined for performance and Warp compatibility

# General Configuration
export ZSH="$HOME/.oh-my-zsh"
export EDITOR="nvim"

# Essential OMZ plugins only (removed heavy/redundant ones)
plugins=(
  git                    # Essential git shortcuts
  golang                 # Go development
  rust                   # Rust development  
  docker                 # Docker commands
  zsh-autosuggestions   # Keep this - very useful
  zsh-syntax-highlighting # Keep this - essential
)

# Load Oh My Zsh (but skip theme - Warp handles prompting)
ZSH_THEME=""  # Disable OMZ themes
source $ZSH/oh-my-zsh.sh

# Essential completions
autoload -U compinit && compinit

# Language and Development Environment Setup
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"
export PATH="$PATH:$GOBIN"

# Cargo (Rust)
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"

# Node.js via mise (universal version manager)

# Python via uv
eval "$(uv generate-shell-completion zsh)"
export UV_PYTHON_PREFERENCE=only-managed

# Essential PATH additions
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/lib/ruby/gems/3.4.0/bin:$PATH"
# Removed ~/.npm-global/bin (migrated to bun)
export PATH="$BUN_INSTALL/bin:$PATH"

# Environment variables
export BUN_INSTALL="$HOME/.bun"

# Bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# Source aliases
[ -f "$HOME/.aliases" ] && source "$HOME/.aliases"

# zoxide (modern cd replacement) - only in interactive shells
if [[ -o interactive ]] && [[ -t 0 ]] && [[ -t 1 ]]; then
    eval "$(zoxide init --cmd cd zsh)"
fi

# Custom aliases (Rust development)
alias ctp='cargo test --color=always 2>&1 | tee /dev/tty | sed "s/\\x1b\\[[0-9;]*m//g" | pbcopy'
alias crp="RUST_BACKTRACE=1 cargo run --color=always 2> >(tee error.log | sed \"s/\u001b\\[[0-9;]*m//g\" | pbcopy)"
alias claude="$HOME/.claude/local/claude"
alias csvlint="/opt/homebrew/lib/ruby/gems/3.4.0/bin/csvlint"
alias python=python3

# Homebrew install tracking function
brew_install_with_tracking() {
    command brew install "$@"
    
    if [ $? -eq 0 ]; then
        echo ""
        echo "üìù Would you like to add '$*' to your dotfiles brew.sh? (y/n)"
        read -r response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            line_num=$(grep -n "# Conditionally install tools" "$HOME/dotfiles/brew.sh" | cut -d: -f1)
            if [ -n "$line_num" ]; then
                sed -i "" "$((line_num-1))i\\
# $*\\
brew install $*" "$HOME/dotfiles/brew.sh"
                echo "‚úÖ Added 'brew install $*' to dotfiles/brew.sh"
            else
                echo "‚ö†Ô∏è  Could not find insertion point in brew.sh - please add manually"
            fi
        fi
    fi
}

# Override brew command for install operations
brew() {
    if [[ "$1" == "install" ]]; then
        brew_install_with_tracking "${@:2}"
    else
        command brew "$@"
    fi
}

# Warp-specific optimizations
# Let Warp handle prompt, history, and UI enhancements natively
# Remove starship prompt - Warp has better native prompting
