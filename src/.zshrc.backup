# General Configuration
export ZSH="$HOME/.oh-my-zsh"
export EDITOR="nvim"

# Oh-my-zsh core
source $ZSH/oh-my-zsh.sh

# Plugins
plugins=(
  nvm
  node
  golang
  rust
  git-extras
  macos
  yarn
  zsh-completions
  wd
  python
  vi-mode
  colorize
  docker
  docker-compose
  zsh-syntax-highlighting
  history
  compleat
  zsh-autosuggestions
)

# Additional Setup for Plugins
autoload -U compinit && compinit
fpath+=${ZSH_CUSTOM:-${ZSH}/custom}/plugins/zsh-completions/src

# GOPATH Configuration
export GOPATH="$HOME/go"
export GOBIN="$GOPATH/bin"
export PATH="$PATH:$GOBIN"

# Other Configuration
[ -f "$HOME/.cargo/env" ] && source "$HOME/.cargo/env"
# Node.js via mise (universal version manager)
export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:$PATH"

# Source Aliases
[ -f "$HOME/.aliases" ] && source "$HOME/.aliases"

# Starship Prompt
eval "$(starship init zsh)"

# Change cd to zoxide (only in interactive shells)
if [[ -o interactive ]] && [[ -t 0 ]] && [[ -t 1 ]]; then
    eval "$(zoxide init --cmd cd zsh)"
fi


# Additional PATH configurations
export PATH="/opt/homebrew/opt/ruby/bin:$PATH"
export PATH="/opt/homebrew/lib/ruby/gems/3.4.0/bin:$PATH"
# Removed ~/.npm-global/bin (migrated to bun)
export PATH="$BUN_INSTALL/bin:$PATH"

# Environment variables
export l5rpc=https://rpc.lavenderfive.com:443/cosmoshub
export BUN_INSTALL="$HOME/.bun"
export UV_PYTHON_PREFERENCE=only-managed

# bun completions
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"

# uv - Modern Python package manager
eval "$(uv generate-shell-completion zsh)"

# Custom aliases (Rust development)
alias ctp='cargo test --color=always 2>&1 | tee /dev/tty | sed "s/\x1b\[[0-9;]*m//g" | pbcopy'
alias crp="RUST_BACKTRACE=1 cargo run --color=always 2> >(tee error.log | sed \"s/\[[0-9;]*m//g\" | pbcopy)"
alias claude="$HOME/.claude/local/claude"
alias csvlint="/opt/homebrew/lib/ruby/gems/3.4.0/bin/csvlint"
alias python=python3

# Homebrew install tracking function
brew_install_with_tracking() {
    # Run the actual brew install command
    command brew install "$@"
    
    # If successful, prompt to add to dotfiles
    if [ $? -eq 0 ]; then
        echo ""
        echo "üìù Would you like to add '$*' to your dotfiles brew.sh? (y/n)"
        read -r response
        if [[ "$response" =~ ^[Yy]$ ]]; then
            # Find the line before "# Conditionally install tools"
            line_num=$(grep -n "# Conditionally install tools" "$HOME/dotfiles/brew.sh" | cut -d: -f1)
            if [ -n "$line_num" ]; then
                # Insert the new brew install command before that line
                sed -i "" "$((line_num-1))i\\
# $*\\
brew install $*" "$HOME/dotfiles/brew.sh"
                echo "‚úÖ Added 'brew install $*' to dotfiles/brew.sh"
            else
                echo "‚ö†Ô∏è  Could not find insertion point in brew.sh - please add manually"
            fi
        fi
    fi
}

# Override the brew command for install operations
brew() {
    if [[ "$1" == "install" ]]; then
        brew_install_with_tracking "${@:2}"
    else
        command brew "$@"
    fi
}
